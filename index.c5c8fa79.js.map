{"mappings":"AAAA,IAAMA,aAAe,SAAUC,EAASC,GACtC,IAAMC,EAAcC,SAASC,cAAc,eAC3CJ,EAAQK,SAAQ,SAAAC,GACVA,EAAMC,eACRL,EAAYM,UAAUC,OAAO,cAE7BP,EAAYM,UAAUE,IAAI,a,KAK1BC,QAAU,CACdC,KAAM,KACNC,WAAY,MACZC,UAAW,GAGPb,SAAW,IAAIc,qBAAqBhB,aAAcY,SAElDK,OAASb,SAASc,eAAe,UAEvChB,SAASiB,QAAQF","sources":["src/js/menu-arrow.js"],"sourcesContent":["const trueCallback = function (entries, observer) {\n  const btnArrowRef = document.querySelector('.link-arrow');\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      btnArrowRef.classList.remove('is-visible');\n    } else {\n      btnArrowRef.classList.add('is-visible');\n    } // intersecting: true or false\n  });\n};\n\nconst options = {\n  root: null,\n  rootMargin: '0px',\n  threshold: 0,\n};\n\nconst observer = new IntersectionObserver(trueCallback, options);\n\nconst target = document.getElementById('header');\n\nobserver.observe(target);\n"],"names":["trueCallback","entries","observer","btnArrowRef","document","querySelector","forEach","entry","isIntersecting","classList","remove","add","options","root","rootMargin","threshold","IntersectionObserver","target","getElementById","observe"],"version":3,"file":"index.c5c8fa79.js.map"}